# Simple	 test for NeoPixels on Raspberry Pi
import time
import board
import neopixel
import socketio
import os
import json

text = ''
background_ = (0,0,0)
color_ = (255,255,255)
speed = 1

filename = 'pid.txt'
# Open the file in write mode and store the content in file_object
with open(filename, 'w') as file_object:
    file_object.write(str(os.getpid()) +'\n')

filename = 'text.txt'
try:
    # Open the file in read mode
    with open(filename, 'r') as file_object:
        for line in file_object:
            text = line
except (FileNotFoundError, ProcessLookupError) as e:
    #os.system('sudo killall python3')
    os.system('python3 led.py')



filename = 'background.txt'
try:
    # Open the file in read mode
    with open(filename, 'r') as file_object:
        for line in file_object:
            x = line.replace("\'", "\"")
            x = json.loads(x)
            background_ = (int(x['r']), int(x['g']), int(x['b']))
except (FileNotFoundError, ProcessLookupError) as e:
    #os.system('sudo killall python3')
    os.system('python3 led.py')
color_ = (10,111,11)

filename = 'color.txt'
try:
    # Open the file in read mode
    with open(filename, 'r') as file_object:
        for line in file_object:
            x = line.replace("\'", "\"")
            x = json.loads(x)
            color_ = (int(x['r']), int(x['g']), int(x['b']))
except (FileNotFoundError, ProcessLookupError) as e:
    #os.system('sudo killall python3')
    os.system('python3 led.py')

text = text + " "

A = [
        [ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ],
        [ 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
        [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
        [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
    ]

B = [
        [ 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 ],
        [ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
        [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
        [ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 0, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
        [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
        [ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
    ]

C = [
        [ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ],
        [ 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 ],
        [ 0, 0, 1, 1, 0, 0, 1, 1, 1, 0 ],
        [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
        [ 0, 0, 1, 1, 0, 0, 1, 1, 1, 0 ],
        [ 0, 0, 1, 1, 1, 1, 1, 1, 1, 0 ],
        [ 0, 0, 0, 1, 1, 1, 1, 1, 0, 0 ]
    ]

D = [
        [ 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 ],
        [ 0, 1, 1, 1, 0, 0, 1, 1, 0, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
        [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
        [ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
        [ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
]

E = [
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
]
F = [
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
]

G = [
[ 0, 0, 0, 0, 1, 1, 1, 1, 1, 0 ],
[ 0, 0, 0, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 0, 1, 1, 1, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 0, 0, 0, 1, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 1, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 0, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 0, 0, 1, 1, 1, 1, 1, 0, 0 ],
]

H = [

  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
]
I = [

  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
]
J = [

  [ 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 1, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 1, 0, 0, 0, 1, 1, 0 ],
  [ 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 ],
  [ 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 ],
]

K =  [
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 1, 1, 0, 0 ],
  [ 0, 1, 1, 0, 0, 1, 1, 0, 0, 0 ],
  [ 0, 1, 1, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 1, 1, 1, 1, 0, 0, 0, 0, 0 ],
  [ 0, 1, 1, 1, 0, 0, 0, 0, 0, 0 ],
  [ 0, 1, 1, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 1, 1, 0, 0, 1, 1, 0, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 1, 1, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
]

L = [

  [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 1, 1, 9, 0, 0, 0, 0, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
]

M = [

  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 1, 0, 0, 1, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 0, 1, 1, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
]

N = [

  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 1, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 1, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 1, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 1, 1, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
]

O = [

  [ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ],
  [ 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 ],
  [ 0, 0, 0, 1, 1, 1, 1, 1, 0, 0 ],
]

P = [

  [ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ],
  [ 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
]

Q = [

  [ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ],
  [ 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 0, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 1, 1, 0, 0 ],
  [ 0, 0, 1, 1, 1, 1, 1, 0, 1, 0 ],

]
R = [

  [ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
  [ 0, 1, 1, 1, 0, 0, 1, 1, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
  [ 0, 1, 1, 0, 0, 1, 1, 1, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
]

S = [

  [ 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 ],
  [ 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 ],
  [ 0, 1, 1, 1, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 1, 0, 0, 0, 0, 0, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 0, 0, 1, 1, 1, 1, 1, 0, 0 ]
]

T = [

  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
]

U = [
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 ],
[ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ]
]

V = [
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 1, 0, 0, 1, 1, 1, 0 ],
[ 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 ],
[ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ],
[ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ]
]

W = [
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 1, 1, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 1, 1, 0, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 1, 0, 0, 1, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
]

X = [

  [ 0, 1, 0, 0, 0, 0, 0, 0, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 ],
  [ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ],
  [ 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 0, 0, 0, 0, 0, 0, 1, 0 ],
]

Y = [

  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
]

Z = [
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 0, 0, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 ],
[ 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 ],
[ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
[ 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 1, 0, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
]

AA = [

  [ 0, 0, 1, 1, 0, 0 ],
  [ 0, 1, 1, 1, 0, 0 ],
  [ 0, 1, 1, 1, 0, 0 ],
  [ 0, 0, 1, 1, 0, 0 ],
  [ 0, 0, 1, 1, 0, 0 ],
  [ 0, 0, 1, 1, 0, 0 ],
  [ 0, 0, 1, 1, 0, 0 ],
  [ 0, 0, 1, 1, 0, 0 ],
  [ 0, 1, 1, 1, 1, 0 ],
  [ 0, 1, 1, 1, 1, 0 ],
]

AB = [
[ 0, 0, 1, 1, 1, 1, 1, 0, 0, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
[ 0, 1, 1, 1, 0, 0, 0, 1, 1, 0 ],
[ 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 ],
[ 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 ],
[ 0, 0, 0, 0, 1, 1, 1, 0, 0, 0 ],
[ 0, 0, 0, 1, 1, 1, 0, 0, 0, 0 ],
[ 0, 1, 1, 1, 0, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
]

AC = [
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 ],
[ 0, 0, 0, 1, 1, 1, 1, 1, 0, 0 ],
[ 0, 0, 1, 1, 1, 1, 1, 0, 0, 0 ],
[ 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 ],
[ 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 1, 0, 0, 0, 1, 1, 0 ],
[ 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 ],
]
AD = [
[ 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 ],
[ 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 ],
[ 0, 0, 0, 0, 1, 1, 0, 1, 0, 0 ],
[ 0, 0, 0, 1, 1, 0, 0, 1, 0, 0 ],
[ 0, 0, 1, 1, 0, 0, 0, 1, 0, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 ],
[ 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 ],
[ 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 ],
]

AE = [
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
[ 0, 0, 1, 0, 0, 0, 1, 1, 1, 0 ],
[ 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 ],
[ 0, 0, 0, 0, 0, 0, 1, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 1, 1, 1, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
[ 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 ],
]

AF = [
[ 0, 0, 0, 0, 0, 0, 1, 1, 0, 0 ],
[ 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 ],
[ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ],
[ 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
[ 0, 1, 1, 1, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 1, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 1, 0, 0, 0, 1, 1, 0 ],
[ 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 ],
]

AG = [
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 1, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 1, 1, 0, 0 ],
[ 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 ],
[ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
[ 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 ],
[ 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 ],
[ 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 ],
[ 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 ],
[ 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 ],
]

AH = [
[ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
[ 0, 1, 1, 0, 0, 0, 1, 1, 0, 0 ],
[ 0, 1, 1, 0, 0, 0, 1, 1, 0, 0 ],
[ 0, 0, 1, 1, 0, 1, 1, 0, 0, 0 ],
[ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
[ 0, 0, 0, 1, 1, 1, 0, 0, 0, 0 ],
[ 0, 0, 1, 1, 0, 1, 1, 1, 0, 0 ],
[ 0, 0, 1, 1, 0, 0, 0, 1, 1, 0 ],
[ 0, 0, 1, 1, 0, 0, 0, 1, 1, 0 ],
[ 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 ],
]

AI = [
[ 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
[ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 0, 1, 1, 1, 1, 1, 1, 1, 0 ],
[ 0, 0, 0, 0, 0, 1, 1, 1, 1, 0 ],
[ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 ],
[ 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 ],
[ 0, 0, 1, 1, 1, 1, 1, 1, 0, 0 ],
]

AJ = [
  [ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ],
  [ 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 ],
  [ 0, 1, 1, 0, 0, 0, 1, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 1, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 1, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 1, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
  [ 0, 0, 1, 1, 0, 0, 1, 1, 0, 0 ],
  [ 0, 0, 0, 1, 1, 1, 1, 1, 0, 0 ],
]

BA = [
    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
]

BB = [
    [ 0, 0, 0, 0 ],
    [ 0, 0, 0, 0 ],
    [ 0, 0, 0, 0 ],
    [ 0, 0, 0, 0 ],
    [ 0, 0, 0, 0 ],
    [ 0, 0, 0, 0 ],
    [ 0, 0, 0, 0 ],
    [ 0, 0, 0, 0 ],
    [ 0, 1, 1, 0 ],
    [ 0, 1, 1, 0 ],
]

BC = [
    [ 0, 1, 1, 0 ],
    [ 0, 1, 1, 0 ],
    [ 0, 1, 1, 0 ],
    [ 0, 1, 1, 0 ],
    [ 0, 1, 1, 0 ],
    [ 0, 1, 1, 0 ],
    [ 0, 0, 0, 0 ],
    [ 0, 0, 0, 0 ],
    [ 0, 1, 1, 0 ],
    [ 0, 1, 1, 0 ],
]

BD = [
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
]

BE = [
    [ 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0 ],
    [ 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0 ],
    [ 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0 ],
    [ 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0 ],
]

BF =[
    [ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ],
    [ 0, 1, 0, 0, 0, 0, 0, 1, 0, 0 ],
    [ 0, 1, 0, 1, 1, 1, 1, 0, 1, 0 ],
    [ 0, 1, 0, 1, 0, 0, 1, 0, 1, 0 ],
    [ 0, 1, 0, 1, 0, 0, 1, 0, 1, 0 ],
    [ 0, 1, 0, 1, 0, 0, 1, 0, 1, 0 ],
    [ 0, 1, 0, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 1, 0, 0, 0, 0, 1, 0, 0 ],
    [ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ],
]

BG = [
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 0 ],
]

BH = [
    [ 0, 0, 0, 1, 1, 1, 1, 0, 0 ],
    [ 0, 0, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 1, 1, 0, 0, 0, 1, 1, 0 ],
    [ 0, 1, 1, 0, 0, 0, 1, 1, 0 ],
    [ 0, 0, 0, 0, 0, 1, 1, 0, 0 ],
    [ 0, 0, 0, 0, 1, 1, 0, 0, 0 ],
    [ 0, 0, 0, 0, 1, 1, 0, 0, 0 ],
    [ 0, 0, 0, 0, 1, 1, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 1, 1, 0, 0, 0 ],
]

BI = [
    [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
]

BJ = [
    [ 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0 ],
    [ 0, 0, 1, 1, 0 ],
    [ 0, 1, 1, 0, 0 ],
]

BK = [
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0 ],
]

BL = [
    [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
    [ 0, 1, 0, 0, 1, 1, 0, 0, 1, 0 ],
    [ 0, 0, 1, 0, 1, 1, 0, 1, 0, 0 ],
    [ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 ],
    [ 0, 0, 0, 1, 1, 1, 1, 0, 0, 0 ],
    [ 0, 0, 1, 0, 1, 1, 0, 1, 0, 0 ],
    [ 0, 1, 0, 0, 1, 1, 0, 0, 1, 0 ],
    [ 0, 0, 0, 0, 1, 1, 0, 0, 0, 0 ],
]

BM = [
    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 1, 1, 0, 0, 0, 1, 1, 0 ],
    [ 0, 0, 1, 1, 0, 0, 1, 1, 1, 0 ],
    [ 0, 0, 0, 0, 0, 1, 1, 1, 0, 0 ],
    [ 0, 0, 0, 0, 1, 1, 1, 0, 0, 0 ],
    [ 0, 0, 0, 1, 1, 1, 0, 0, 0, 0 ],
    [ 0, 0, 1, 1, 0, 0, 0, 1, 1, 0 ],
    [ 0, 1, 1, 0, 0, 0, 0, 1, 1, 0 ],
    [ 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 ],
    [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
]





pixel_pin = board.D18
num_pixels = 500
ORDER = neopixel.GRB

pixels = neopixel.NeoPixel(
    pixel_pin, num_pixels, brightness=1.0, auto_write=False, pixel_order=ORDER
)

start = 50

def off():
    for x in range(500):
        pixels[x] = (0,0,0)
    pixels.show()

def on(background):
    for x in range(500):
        pixels[x] = background
    pixels.show()

def scroll(pos, color, background, char):
    position = 0
    for y in range(len(char)):
        min = (y + 1) * 50 - 50
        max = ((y + 1) * 50) - 1
        position = min + pos
        position_ = max - pos
        for x in range(len(char[0])):
            if(y%2==0):
                if(char[y][x] == 0 and position > min and position < max):
                    pixels[position] = background
                    position = position + 1
                elif(char[y][x] == 1 and position > min and position < max):
                    pixels[position] = color
                    position = position + 1
            if(y%2==1):
                if(char[y][x] == 0 and position_ > max and position_ < min):
                    pixels[position_] = background_
                    position_ = position_ - 1
                elif(char[y][x] == 1 and position_ > max and position_ < min):
                    pixels[position_] = color
                    position_ = position_ - 1
            if(y == 0 and position <= min):
                position = position + 1
            if(y == 2 and position <= min):
                position = position + 1
            if(y == 4 and position <= min):
                position = position + 1
            if(y == 6 and position <= min):
                position = position + 1
            if(y == 8 and position <= min):
                position = position + 1

off()
on(background_)
array = list(text)
length = len(list(text)) * 10

while(start>-length):
    pos = start
    for z in range(len(array)):
        if(array[z]=="a" or array[z]=="A"):
            scroll(pos, color_, background_, A)
            pos = pos + len(A[0])
        if(array[z]=="b" or array[z]=="B"):
            scroll(pos, color_, background_, B)
            pos = pos + len(B[0])
        if(array[z]=="c" or array[z]=="C"):
            scroll(pos, color_, background_, C)
            pos = pos + len(B[0])
        if(array[z]=="d" or array[z]=="D"):
            scroll(pos, color_, background_, D)
            pos = pos + len(D[0])
        if(array[z]=="e" or array[z]=="E"):
            scroll(pos, color_, background_, E)
            pos = pos + len(E[0])
        if(array[z]=="f" or array[z]=="F"):
            scroll(pos, color_, background_, F)
            pos = pos + len(F[0])
        if(array[z]=="g" or array[z]=="G"):
            scroll(pos, color_, background_, G)
            pos = pos + len(G[0])
        if(array[z]=="h" or array[z]=="H"):
            scroll(pos, color_, background_, H)
            pos = pos + len(H[0])
        if(array[z]=="i" or array[z]=="I"):
            scroll(pos, color_, background_, I)
            pos = pos + len(I[0])
        if(array[z]=="j" or array[z]=="J"):
            scroll(pos, color_, background_, J)
            pos = pos + len(J[0])
        if(array[z]=="k" or array[z]=="K"):
            scroll(pos, color_, background_, K)
            pos = pos + len(K[0])
        if(array[z]=="l" or array[z]=="L"):
            scroll(pos, color_, background_, L)
            pos = pos + len(L[0])
        if(array[z]=="m" or array[z]=="M"):
            scroll(pos, color_, background_, M)
            pos = pos + len(M[0])
        if(array[z]=="n" or array[z]=="N"):
            scroll(pos, color_, background_, N)
            pos = pos + len(N[0])
        if(array[z]=="o" or array[z]=="O"):
            scroll(pos, color_, background_, O)
            pos = pos + len(O[0])
        if(array[z]=="p" or array[z]=="P"):
            scroll(pos, color_, background_, P)
            pos = pos + len(P[0])
        if(array[z]=="q" or array[z]=="Q"):
            scroll(pos, color_, background_, Q)
            pos = pos + len(Q[0])
        if(array[z]=="r" or array[z]=="R"):
            scroll(pos, color_, background_, R)
            pos = pos + len(R[0])
        if(array[z]=="s" or array[z]=="S"):
            scroll(pos, color_, background_, S)
            pos = pos + len(S[0])
        if(array[z]=="t" or array[z]=="T"):
            scroll(pos, color_, background_, T)
            pos = pos + len(T[0])
        if(array[z]=="u" or array[z]=="U"):
            scroll(pos, color_, background_, U)
            pos = pos + len(U[0])
        if(array[z]=="v" or array[z]=="V"):
            scroll(pos, color_, background_, V)
            pos = pos + len(V[0])
        if(array[z]=="w" or array[z]=="W"):
            scroll(pos, color_, background_, W)
            pos = pos + len(W[0])
        if(array[z]=="x" or array[z]=="X"):
            scroll(pos, color_, background_, X)
            pos = pos + len(X[0])
        if(array[z]=="y" or array[z]=="Y"):
            scroll(pos, color_, background_, Y)
            pos = pos + len(Y[0])
        if(array[z]=="z" or array[z]=="Z"):
            scroll(pos, color_, background_, Z)
            pos = pos + len(Z[0])
        if(array[z]=="1"):
            scroll(pos, color_, background_, AA)
            pos = pos + len(AA[0])
        if(array[z]=="2"):
            scroll(pos, color_, background_, AB)
            pos = pos + len(AB[0])
        if(array[z]=="3"):
            scroll(pos, color_, background_, AC)
            pos = pos + len(AC[0])
        if(array[z]=="4"):
            scroll(pos, color_, background_, AD)
            pos = pos + len(AD[0])
        if(array[z]=="5"):
            scroll(pos, color_, background_, AE)
            pos = pos + len(AE[0])
        if(array[z]=="6"):
            scroll(pos, color_, background_, AF)
            pos = pos + len(AF[0])
        if(array[z]=="7"):
            scroll(pos, color_, background_, AG)
            pos = pos + len(AG[0])
        if(array[z]=="8"):
            scroll(pos, color_, background_, AH)
            pos = pos + len(AH[0])
        if(array[z]=="9"):
            scroll(pos, color_, background_, AI)
            pos = pos + len(AI[0])
        if(array[z]=="0"):
            scroll(pos, color_, background_, AJ)
            pos = pos + len(AJ[0])
        if(array[z]==" "):
            scroll(pos, color_, background_, BA)
            pos = pos + len(BA[0])
        if(array[z]=="."):
            scroll(pos, color_, background_, BB)
            pos = pos + len(BB[0])
        if(array[z]=="!"):
            scroll(pos, color_, background_, BC)
            pos = pos + len(BC[0])
        if(array[z]=="-"):
            scroll(pos, color_, background_, BD)
            pos = pos + len(BD[0])
        if(array[z]=="#"):
            scroll(pos, color_, background_, BE)
            pos = pos + len(BE[0])
        if(array[z]=="@"):
            scroll(pos, color_, background_, BF)
            pos = pos + len(BF[0])
        if(array[z]=="_"):
            scroll(pos, color_, background_, BG)
            pos = pos + len(BG[0])
        if(array[z]=="?"):
            scroll(pos, color_, background_, BH)
            pos = pos + len(BH[0])
        if(array[z]=="+"):
            scroll(pos, color_, background_, BI)
            pos = pos + len(BI[0])
        if(array[z]==","):
            scroll(pos, color_, background_, BJ)
            pos = pos + len(BJ[0])
        if(array[z]=="="):
            scroll(pos, color_, background_, BK)
            pos = pos + len(BK[0])
        if(array[z]=="*"):
            scroll(pos, color_, background_, BL)
            pos = pos + len(BL[0])
        if(array[z]=="%"):
            scroll(pos, color_, background_, BM)
            pos = pos + len(BM[0])

    start = start - 2
    pixels.show()
    if(start<=-length):
        start = 50
